//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/DefaultControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultControl: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DefaultControl"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""83787307-cc04-4be7-9562-ce6277a5b400"",
            ""actions"": [
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""c4f73f12-d03f-4aa1-a880-64439d9a9d94"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePan"",
                    ""type"": ""Value"",
                    ""id"": ""2f767392-9fa1-449e-87d6-6670e9968aaa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseMiddle"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4a948533-625d-46b1-8788-095cfd60a97d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""WASDPan"",
                    ""type"": ""Value"",
                    ""id"": ""9cc26044-654c-40a3-8d16-25b9133778f9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""378b1093-63ed-4889-b82d-4a9fffa6bd12"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecdd3310-9a7f-4837-87ed-f69dac90100f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c25d105-1260-4e5d-8478-92cfaee4fd18"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMiddle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""db487907-4cf2-4e40-9c5d-f418960b17af"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDPan"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e52fa716-7801-43e4-8e17-69d8a3bad7da"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDPan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4d4dcd12-1c00-47fb-b144-1f280bbab2b2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDPan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""98144625-f84c-4c2f-9f56-719c4ad6197f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDPan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3c6e1fd3-5528-4b7a-ac48-27edab4ed44d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASDPan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MouseScroll = m_Player.FindAction("MouseScroll", throwIfNotFound: true);
        m_Player_MousePan = m_Player.FindAction("MousePan", throwIfNotFound: true);
        m_Player_MouseMiddle = m_Player.FindAction("MouseMiddle", throwIfNotFound: true);
        m_Player_WASDPan = m_Player.FindAction("WASDPan", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_MouseScroll;
    private readonly InputAction m_Player_MousePan;
    private readonly InputAction m_Player_MouseMiddle;
    private readonly InputAction m_Player_WASDPan;
    public struct PlayerActions
    {
        private @DefaultControl m_Wrapper;
        public PlayerActions(@DefaultControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseScroll => m_Wrapper.m_Player_MouseScroll;
        public InputAction @MousePan => m_Wrapper.m_Player_MousePan;
        public InputAction @MouseMiddle => m_Wrapper.m_Player_MouseMiddle;
        public InputAction @WASDPan => m_Wrapper.m_Player_WASDPan;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @MousePan.started += instance.OnMousePan;
            @MousePan.performed += instance.OnMousePan;
            @MousePan.canceled += instance.OnMousePan;
            @MouseMiddle.started += instance.OnMouseMiddle;
            @MouseMiddle.performed += instance.OnMouseMiddle;
            @MouseMiddle.canceled += instance.OnMouseMiddle;
            @WASDPan.started += instance.OnWASDPan;
            @WASDPan.performed += instance.OnWASDPan;
            @WASDPan.canceled += instance.OnWASDPan;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @MousePan.started -= instance.OnMousePan;
            @MousePan.performed -= instance.OnMousePan;
            @MousePan.canceled -= instance.OnMousePan;
            @MouseMiddle.started -= instance.OnMouseMiddle;
            @MouseMiddle.performed -= instance.OnMouseMiddle;
            @MouseMiddle.canceled -= instance.OnMouseMiddle;
            @WASDPan.started -= instance.OnWASDPan;
            @WASDPan.performed -= instance.OnWASDPan;
            @WASDPan.canceled -= instance.OnWASDPan;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnMousePan(InputAction.CallbackContext context);
        void OnMouseMiddle(InputAction.CallbackContext context);
        void OnWASDPan(InputAction.CallbackContext context);
    }
}
